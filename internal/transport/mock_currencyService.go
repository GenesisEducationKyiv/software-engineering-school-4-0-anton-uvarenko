// Code generated by mockery v2.43.2. DO NOT EDIT.

package transport

import mock "github.com/stretchr/testify/mock"

// mockCurrencyService is an autogenerated mock type for the currencyService type
type mockCurrencyService struct {
	mock.Mock
}

// Rate provides a mock function with given fields:
func (_m *mockCurrencyService) Rate() (float32, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Rate")
	}

	var r0 float32
	var r1 error
	if rf, ok := ret.Get(0).(func() (float32, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() float32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(float32)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// newMockCurrencyService creates a new instance of mockCurrencyService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockCurrencyService(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockCurrencyService {
	mock := &mockCurrencyService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
